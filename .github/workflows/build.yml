# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Build and test the release
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Release-Test
        uses: ashutoshvarma/action-cmake-build@master
        with:
          build-dir: ${{ runner.workspace }}/build
          # will set the CC & CXX for cmake
          cc: gcc
          cxx: g++
          build-type: Release
          # Extra options pass to cmake while configuring project
          configure-options: -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON -DLOG_CMAKE_VARIABLES=ON
          run-test: true
          ctest-options: -s
          # install the build using cmake --install
          install-build: false
          # run build using '-j [parallel]' to use multiple threads to build
          parallel: 8
  
  coverage:
    name: Generate coverage info
    runs-on: ubuntu-latest
    steps:
    - name: Install gcov
      run: |
        sudo apt-get install -y lcov

    - name: Clone the repository
      uses: actions/checkout@v2
      with:
        build-dir: ${{ runner.workspace }}/build
        # will set the CC & CXX for cmake
        cc: gcc
        cxx: g++
        build-type: Debug
        # Extra options pass to cmake while configuring project
        configure-options: -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON -DLOG_CMAKE_VARIABLES=ON -DCODE_COVERAGE=ON
        run-test: true
        ctest-options: -s
        # install the build using cmake --install
        install-build: false
        parallel: 8
        
    - name: Run script stuff
      run: |
        echo "================================================================================"
        ls -lha /home/runner/work/cmake-coverage/build/
        echo "================================================================================"
        ls -lha /home/runner/work/cmake-coverage/build/Linux-i686/Debug/ccov
        echo "================================================================================"
    - name: Upload the coverage data
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-data
        path: /home/runner/work/cmake-coverage/build/Linux-i686/Debug/ccov/*.info

  coverage-report:
    name: Generate coverage report
    runs-on: ubuntu-latest
    needs: coverage
    steps:
    - name: Download coverage data
      uses: actions/download-artifact@v2
      with:
        name: code-coverage-data
    - name: Coverage report
      uses: zgosalvez/github-actions-report-lcov@26957abb761285d2a89b2d47f77f0fe7965c437e
      with:
        coverage-files: ccov/*.info
        minimum-coverage: 0
        working-directory: ${{ runner.workspace }}
        artifact-name: code-coverage-report
        github-token: ${{ secrets.GITHUB_TOKEN }}
