# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      
      - name: Release-Test
        uses: ashutoshvarma/action-cmake-build@master
        with:
          build-dir: ${{ runner.workspace }}/build
          # will set the CC & CXX for cmake
          cc: gcc
          cxx: g++
          build-type: Debug
          # Extra options pass to cmake while configuring project
          configure-options: -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON -DLOG_CMAKE_VARIABLES=ON
          run-test: true
          ctest-options: -s
          # install the build using cmake --install
          install-build: false
          # run build using '-j [parallel]' to use multiple threads to build
          parallel: 8
        
      - name: Debug-Coverage
        uses: ashutoshvarma/action-cmake-build@master
        with:
          build-dir: ${{ runner.workspace }}/build
          # will set the CC & CXX for cmake
          cc: gcc
          cxx: g++
          build-type: Release
          # Extra options pass to cmake while configuring project
          configure-options: -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON -DLOG_CMAKE_VARIABLES=ON -DCODE_COVERAGE=ON
          run-test: true
          ctest-options: -s
          # install the build using cmake --install
          install-build: false
          # run build using '-j [parallel]' to use multiple threads to build
          parallel: 8
